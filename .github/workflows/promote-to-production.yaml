name: Promote to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to promote to production (e.g., 1.2.0-beta.1)'
        required: true
        type: string
      create_pr:
        description: 'Create PR instead of direct merge'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  pull-requests: write

jobs:
  promote:
    name: Promote to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Verify version exists
        run: |
          if ! git tag | grep -q "^v${{ inputs.version }}$"; then
            echo "Error: Version v${{ inputs.version }} does not exist"
            exit 1
          fi

      - name: Create promotion branch
        if: ${{ inputs.create_pr }}
        run: |
          git checkout -b promote/v${{ inputs.version }}
          git checkout dev
          git merge --no-ff v${{ inputs.version }} -m "chore: promote v${{ inputs.version }} to production"
          git push origin promote/v${{ inputs.version }}

      - name: Create Pull Request
        if: ${{ inputs.create_pr }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸš€ Promote v${{ inputs.version }} to Production`,
              head: `promote/v${{ inputs.version }}`,
              base: 'master',
              body: `
                ## ðŸš€ Production Promotion
                
                This PR promotes version **v${{ inputs.version }}** from staging (dev) to production (master).
                
                ### What's included:
                - All features and fixes from v${{ inputs.version }}
                - Updated changelog
                - Version bump
                
                ### Checklist:
                - [ ] All tests are passing
                - [ ] Staging environment is stable
                - [ ] No critical issues reported
                
                After merging, this will trigger a production release.
              `
            });
            
            console.log(\`Pull request created: \${pr.html_url}\`);

      - name: Direct merge to master
        if: ${{ !inputs.create_pr }}
        run: |
          git checkout master
          git merge --no-ff v${{ inputs.version }} -m "chore: promote v${{ inputs.version }} to production"
          git push origin master
