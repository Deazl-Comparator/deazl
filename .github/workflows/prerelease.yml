name: Prerelease

on:
  push:
    branches:
      - dev
      - beta
      - alpha
      - "release/**"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Yarn
        run: corepack enable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Setup yarn cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build packages
        run: yarn build

      - name: Determine prerelease tag
        id: prerelease-tag
        run: |
          if [[ ${{ github.ref }} == "refs/heads/dev" ]]; then
            echo "tag=beta" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == "refs/heads/beta" ]]; then
            echo "tag=beta" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == "refs/heads/alpha" ]]; then
            echo "tag=alpha" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == refs/heads/release/* ]]; then
            echo "tag=rc" >> $GITHUB_OUTPUT
          else
            echo "tag=canary" >> $GITHUB_OUTPUT
          fi

      - name: Enter prerelease mode
        run: yarn changeset:pre:enter ${{ steps.prerelease-tag.outputs.tag }}

      - name: Create snapshot release
        run: |
          yarn changeset version --snapshot ${{ steps.prerelease-tag.outputs.tag }}
          yarn changeset publish --tag ${{ steps.prerelease-tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
