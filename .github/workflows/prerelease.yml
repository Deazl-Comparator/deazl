name: Prerelease

on:
  push:
    paths:
      - ".changeset/**"
      - "packages/**"
    branches:
      - dev
      - beta
      - alpha
      - "release/**"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  prerelease:
    name: changesets pre-release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Yarn
        run: corepack enable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Setup yarn cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Debug condition values
        run: |
          echo "pre.json exists: ${{ steps.check_if_pre_json_exists.outputs.files_exists }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Contains version packages: ${{ contains(github.event.head_commit.message, 'ci(changesets): version packages') }}"
          echo "Full condition would be: ${{ steps.check_if_pre_json_exists.outputs.files_exists == 'true' && contains(github.event.head_commit.message, 'ci(changesets): version packages') }}"

      - name: Check if pre.json exists
        id: check_if_pre_json_exists
        uses: andstor/file-existence-action@v3.0.0
        with:
          files: ".changeset/pre.json"

      - name: Determine prerelease tag
        id: prerelease-tag
        run: |
          if [[ ${{ github.ref }} == "refs/heads/dev" ]]; then
            echo "tag=beta" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == "refs/heads/beta" ]]; then
            echo "tag=beta" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == "refs/heads/alpha" ]]; then
            echo "tag=alpha" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == refs/heads/release/* ]]; then
            echo "tag=rc" >> $GITHUB_OUTPUT
          else
            echo "tag=canary" >> $GITHUB_OUTPUT
          fi

      - name: Enter prerelease mode if not already in it
        if: steps.check_if_pre_json_exists.outputs.files_exists == 'false'
        run: yarn changeset pre enter ${{ steps.prerelease-tag.outputs.tag }}

      - name: Create pre-release PR
        id: create-pre-release-pr
        if: "${{ steps.check_if_pre_json_exists.outputs.files_exists == 'true' && !startsWith(github.event.head_commit.message, 'ci(changesets): version packages') }}"
        uses: changesets/action@v1
        with:
          version: yarn changeset version
          title: "ci(changesets): :package: version packages"
          commit: "ci(changesets): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        id: publish-to-npm
        if: "${{ steps.check_if_pre_json_exists.outputs.files_exists == 'true' && contains(github.event.head_commit.message, 'ci(changesets): version packages') }}"
        uses: changesets/action@v1
        with:
          publish: yarn changeset publish --tag ${{ steps.prerelease-tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
