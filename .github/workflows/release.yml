name: Release

on:
  workflow_dispatch:
  push:
    paths:
      - ".changeset/**"
      - "packages/**"
    branches:
      - canary

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/yarn-nm-install

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn run version
          createGithubReleases: true
          title: "ci(changesets): :package: version packages"
          commit: "ci(changesets): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create canary tags and releases
      #   if: steps.changesets.outputs.published != 'true'
      #   timeout-minutes: 15
      #   run: |
      #     # Configure git for tagging
      #     git config user.name "Cl√©ment Muth"
      #     git config user.email "clementmuth@gmail.com"

      #     # Enter canary prerelease mode and version packages
      #     yarn changeset pre enter canary
      #     yarn changeset version
          
      #     # Get all packages that were versioned by changesets
      #     versioned_packages=$(find packages -name "package.json" -exec sh -c 'if git diff HEAD~1 "$1" | grep -q "version"; then node -p "JSON.stringify({name: require(\"$1\").name, version: require(\"$1\").version})"; fi' _ {} \; | grep -v "^$")
          
      #     if [ -z "$versioned_packages" ]; then
      #       echo "No packages were versioned, skipping release"
      #       exit 0
      #     fi
          
      #     # Create releases for each versioned package
      #     echo "$versioned_packages" | while read -r package_info; do
      #       if [ -n "$package_info" ]; then
      #         package_name=$(echo "$package_info" | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).name")
      #         package_version=$(echo "$package_info" | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
      #         tag_name="${package_name}@${package_version}"
              
      #         # Create git tag
      #         git tag "$tag_name"
              
      #         # Create GitHub Release
      #         gh release create "$tag_name" \
      #           --title "üê§ Canary Release: $package_name@$package_version" \
      #           --notes "üöÄ **Canary Prerelease: $package_name@$package_version**
                
      #           Cette version canary est g√©n√©r√©e depuis la branche \`canary\` pour les tests et validations pr√©liminaires.
                
      #           **Installation:**
      #           \`\`\`bash
      #           # Ces packages ne sont pas publi√©s sur NPM
      #           # Utilisez les artefacts de build ou clonez √† partir de ce tag
      #           git clone https://github.com/Deazl-Comparator/deazl.git
      #           git checkout $tag_name
      #           yarn install && yarn build
      #           \`\`\`
                
      #           **Package:** $package_name  
      #           **Version:** $package_version
                
      #           **‚ö†Ô∏è Attention:** Cette version est destin√©e aux tests internes et peut contenir des bugs.
                
      #           **üìã Changements:** Voir le CHANGELOG du package pour les d√©tails." \
      #           --prerelease
      #       fi
      #     done
          
      #     # Commit and push all changes
      #     git add .
      #     git commit -m "ci(changesets): version packages for canary release" || echo "No changes to commit"
      #     git push origin canary
      #     git push origin --tags
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        if: steps.changesets.outputs.published != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: canary-build-artifacts-${{ github.sha }}
          path: |
            packages/*/dist/
            packages/*/build/
            packages/*/lib/
          retention-days: 30