# name: Security Scan

# on:
#   push:
#     branches: [ main, dev ]
#   pull_request:
#     branches: [ main, dev ]
#   schedule:
#     - cron: '0 0 * * 0'  # Run weekly

# defaults:
#   run:
#     working-directory: pcomparator

# jobs:
#   security:
#     name: Security Scan
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 'lts/*'

#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

#       - name: Cache yarn dependencies
#         uses: actions/cache@v4
#         id: yarn-cache
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       - name: Install dependencies
#         run: yarn install --frozen-lockfile

#       - name: Run SNYK security scan
#         uses: snyk/actions/node@master
#         with:
#           command: cd $GITHUB_WORKSPACE/pcomparator && snyk test
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

#       - name: Run yarn audit
#         run: yarn npm audit # Using npm audit through yarn for better compatibility

#       - name: CodeQL Analysis
#         uses: github/codeql-action/init@v2
#         with:
#           languages: javascript
      
#       - name: Perform CodeQL Analysis
#         uses: github/codeql-action/analyze@v2

#   dependency-review:
#     name: Dependency Review
#     runs-on: ubuntu-latest
#     if: github.event_name == 'pull_request'
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
        
#       - name: Dependency Review
#         uses: actions/dependency-review-action@v3
